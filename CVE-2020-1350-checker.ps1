<#
.SYNOPSIS
    Checks if your DNS Server is vulnerable for the Remote Code Execution in the Windows DNS Service.
.DESCRIPTION
    Script is checking if the CVE-2020-1350 is applicable to your Windows Server and whether the Windows Update KB4565529 is installed or not.
.EXAMPLE
    PS C:\> .\CVE-2020-1350-checker.ps1
.NOTES
    Created by: T13nn3s
    Date: 15-07-2020
    Check my blog: https://binsec.nl
    Last update: 15-07-2020
#>

If (-NOT ([Security.Principal.WindowsPrincipal][Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {   
    $arguments = "& '" + $myinvocation.mycommand.definition + "'"
    Start-Process powershell -Verb runAs -ArgumentList $arguments
    Break
}

function CheckForDNSServer {
    Write-Host "[*] Checking for the Windows DNS Service..."
    $DNSService = Get-Service | where-object { $_.name -like "DNS" } -ErrorAction SilentlyContinue
    if ($DNSService.Status -eq "Running") {
        Write-Host "[+] This server is acting as an Windows DNS Server. CVE-2020-1350 is applicable to this Windows Server." -ForegroundColor Green
    }
    Else {
        Write-Host "[+] This server is not acting as an Windows DNS Server. CVE-2020-1350 is not applicable to this Windows Server." -ForegroundColor Green
        Pause
        return
    } 
}# End CheckForDNSServer function
function CheckIfUpdateIsInstalled {
    Write-Host "[*] Check if KB4565529 is installed..."

    $fix = Get-HotFix -Id KB4565529 -ErrorAction SilentlyContinue
    
    if ($fix) {
        Write-Host "[+] *** Windows Update $($fix.HotFixID) is installed on $($fix.InstalledOn). You're not vulnerable ***"
        Write-Host "[+] No workaround needed."
        return
    }
    Else {
        Write-Host "[-] Windows Update $($kb) is not installed."
    }
} # End function CheckIfUpdateIsInstalled

function Get-Menu {
    param (
        [string]$title = "Workaround for CVE-2020-1350"
    )
    Write-Host ""
    Write-Host "================ $title ================"

    Write-Host "1: Press '1' for check if this service is vulnerable for CVE-2020-1350" 
    Write-Host "2: Press '2' to apply the CVE-2020-1350 workaround to this server (NOTICE: THe Windows DNS Service will be restarted!)"
    Write-Host "Q: Press 'Q' to quit."
} # End function Get-Menu

function CheckRegDNS {
    param (
        [string]$reg = "HKLM:\SYSTEM\CurrentControlSet\Services\DNS\Parameters"
    )
    $size = "0xFF00"
    $check = Get-ItemProperty -Path $reg -Name "TcpReceivePacketSize" -ErrorAction SilentlyContinue

    if ($check.TcpReceivePacketSize -eq $size) {
        Write-Host "[+] Workaround is applied to this server."
        Write-Host "[-] You're not vulnerable" -f Green

    }
    Else {
        Write-Host "[*] Workaround is not applied."
        Write-Host "[-] You're vulnerable" -f yellow
    }
} # End function CheckRegSmbv3Compression

function SetDNSRegWorkaround {
    Write-Host "[*] Setting the workaround in the registry..."
        $reg = "HKLM:\SYSTEM\CurrentControlSet\Services\DNS\Parameters"
        $value = "0xFF00"

    try {
        Set-ItemProperty -Path $reg -name TcpReceivePacketSize -Type string -value $value -Force
        Write-Host "[+] Setting the workaround in the registry...Done"
    }
    Catch {
        $err = $_.Exception.Message
        Write-Error $err
    }

    # Restarting DNS Service
    Write-Host "[*] Restarting Windows DNS Service..."
    try {
        restart-service DNS
        Write-Host "[+] DNS Service is restarted"
    }
    Catch {
        $err = $_.Exception.Message
        Write-Error $err
    }
    CheckRegDNS
} # End SetDNSRegWorkaround

CheckForDNSServer
CheckIfUpdateIsInstalled

Do {
    Get-Menu
    $HumanInput = Read-Host "Please make a selection"
    switch ($HumanInput) {
        '1' {
            Write-Host 'You chose option #1'
            CheckRegDNS
        } '2' {
            Write-Host 'You chose option #2'
            SetDNSRegWorkaround
        } 'Q' {
            return
        }
    }
    pause
}
until ($HumanInput -eq 'q')
